@model StudentAdministrationSystem.Models.StudentListViewModel

<div class="container">
    <h2 class="mb-4 text-center">Registered Students</h2>

    <div class="row">
        <!-- Venstre menu -->
        <div class="col-md-3">
            <!-- Education Filter Component -->
            @await Component.InvokeAsync("EducationFilter", new { selectedEducation = Model.EducationFilter })

            <!-- Create Student Button -->
            <div class="mt-3 text-center">
                <a asp-action="CreateStudent" class="btn btn-primary w-100">
                    <i class="bi bi-person-plus"></i> Create New Student
                </a>
            </div>
            <div class="mt-3 text-center">
                <form asp-controller="Account" asp-action="Logout" method="post">
                    <button type="submit" class="btn btn-danger">Log ud</button>
                </form>
            </div>
        </div>

        <!-- Højre tabelvisning -->
        <div class="col-md-9">
            <div class="table-responsive shadow-sm rounded-3">
                <table class="table table-striped table-hover align-middle mb-0">
                    <thead class="table-primary">
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Education</th>
                            <th>Semester</th>
                            <th>Email</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in Model.Students)
                        {
                            @await Html.PartialAsync("StudentSummary", student)
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav aria-label="Student pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { studentPage = i, educationFilter = Model.EducationFilter })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>
